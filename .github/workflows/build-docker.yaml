name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - build-images

env:
  REGISTRY_IMAGE: us-docker.pkg.dev/dev-staging-308107/devbox-containers/foundationdb
  FDB_VERSION: 7.1.42

jobs:
  build:
    runs-on:
      - ephemeral
      - self-hosted
      - ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
          - arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Workaround found here: https://github.com/actions/actions-runner-controller/issues/893#issuecomment-1428776280

      # Upgrading ARC should fix this thiss as it's fixed here:
      # https://github.com/actions/actions-runner-controller/pull/2833
      - name: Set up Docker Context for Buildx
        shell: bash
        id: buildx-context
        run: |
          docker context create buildx-context || true
      - name: Use Docker Context for Buildx
        shell: bash
        id: use-buildx-context
        run: |
          docker context use buildx-context || true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: --debug
          endpoint: buildx-context
      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: us-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.DEVBOX_GCP_ARTIFACT_ADMIN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      - name: Build
        id: build
        uses: docker/build-push-action@v5
        with:
          context: docker
          file: ./docker/self_contained.Dockerfile
          build-args: |
            FDB_VERSION=${{ env.FDB_VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/${{ matrix.platform }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"          
      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1


  merge:
    runs-on:
      - ephemeral
      - self-hosted
      - amd64
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests
          # Workaround found here: https://github.com/actions/actions-runner-controller/issues/893#issuecomment-1428776280
    
          # Upgrading ARC should fix this thiss as it's fixed here:
          # https://github.com/actions/actions-runner-controller/pull/2833
      - name: Set up Docker Context for Buildx
        shell: bash
        id: buildx-context
        run: |
          docker context create buildx-context || true
      - name: Use Docker Context for Buildx
        shell: bash
        id: use-buildx-context
        run: |
          docker context use buildx-context || true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: --debug
          endpoint: buildx-context
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          # tags: |
          #   type=raw,value=7.1.42
      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: us-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.DEVBOX_GCP_ARTIFACT_ADMIN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)          
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}          